<?xml version="1.0"?>
<testResults>
  <FitNesseVersion>v20100312</FitNesseVersion>
  <rootPath>WumpusPicksUpManyArrows</rootPath>
    <result>
    <counts>
      <right>2</right>
      <wrong>1</wrong>
      <ignores>0</ignores>
      <exceptions>2</exceptions>
    </counts>
    <content><![CDATA[<br/><div class="setup">
	<div style="float: right;" class="meta"><a href="javascript:expandAll();">Expand All</a> | <a href="javascript:collapseAll();">Collapse All</a></div>
	<a href="javascript:toggleCollapsable('9150461253270538754');">
		<img src="/files/images/collapsableClosed.gif" class="left" id="img9150461253270538754"/>
	</a>
&nbsp;<span class="meta">Set Up: <a href="HuntTheWumpus.SetUp">.HuntTheWumpus.SetUp</a> <a href="HuntTheWumpus.SetUp?edit&amp;redirectToReferer=true&amp;redirectAction=">(edit)</a></span>
	<div class="hidden" id="9150461253270538754"><table border="1" cellspacing="0" _TABLENUMBER=4169262722210375383>
<tr><td>Import</td>
</tr>
<tr><td>HuntTheWumpus.fixtures</td>
</tr>
</table>
<br/><table class="plain_text_table" _TABLENUMBER=9021193200695028784><tr><td>Library</td>
</tr>
<tr><td><span class="pass">Game driver</span></td>
</tr>
</table></div>
</div>
If a wumpus moves into a cavern where there are many arrows, the wumpus eats up all the arrows.<br/><br/><pre><br/>[1][2]<br/></pre><br/><br/><span class="meta">variable defined: ARROWS=3</span><br/><br/><table border="1" cellspacing="0" _TABLENUMBER=3310365973375759454>
<tr><td colspan="3"><span class="pass">Make map</span></td>
</tr>
<tr><td>start</td>
<td>end</td>
<td>direction</td>
</tr>
<tr><td>1</td>
<td>2</td>
<td>E</td>
</tr>
</table>
<br/><table border="1" cellspacing="0" _TABLENUMBER=7370519019180089890>
<tr><td><span class="fail">put: Bad table: <br/><pre>fitnesse.slimTables.SlimTable$SyntaxError: Table has 4 header column(s), but row 2 only has 2 column(s).
	at fitnesse.slimTables.DecisionTable$DecisionTableCaller.checkRow(DecisionTable.java:82)
	at fitnesse.slimTables.DecisionTable$FixtureCaller.invokeRow(DecisionTable.java:129)
	at fitnesse.slimTables.DecisionTable$FixtureCaller.invokeRows(DecisionTable.java:125)
	at fitnesse.slimTables.DecisionTable$FixtureCaller.call(DecisionTable.java:119)
	at fitnesse.slimTables.DecisionTable.appendInstructions(DecisionTable.java:29)
	at fitnesse.slimTables.SlimTable.appendInstructions(SlimTable.java:83)
	at fitnesse.responders.run.slimResponder.SlimTestSystem.createInstructions(SlimTestSystem.java:276)
	at fitnesse.responders.run.slimResponder.SlimTestSystem.processTablesAndGetHtml(SlimTestSystem.java:258)
	at fitnesse.responders.run.slimResponder.SlimTestSystem.processAllTablesOnPage(SlimTestSystem.java:245)
	at fitnesse.responders.run.slimResponder.SlimTestSystem.runTestsAndGenerateHtml(SlimTestSystem.java:201)
	at fitnesse.responders.run.MultipleTestsRunner.executeTestSystemPages(MultipleTestsRunner.java:121)
	at fitnesse.responders.run.MultipleTestsRunner.startTestSystemAndExecutePages(MultipleTestsRunner.java:101)
	at fitnesse.responders.run.MultipleTestsRunner.executePagesInTestSystem(MultipleTestsRunner.java:87)
	at fitnesse.responders.run.MultipleTestsRunner.internalExecuteTestPages(MultipleTestsRunner.java:78)
	at fitnesse.responders.run.MultipleTestsRunner.executeTestPages(MultipleTestsRunner.java:57)
	at fitnesse.responders.run.SuiteResponder.performExecution(SuiteResponder.java:47)
	at fitnesse.responders.run.TestResponder.doSending(TestResponder.java:45)
	at fitnesse.responders.ChunkingResponder.startSending(ChunkingResponder.java:67)
	at fitnesse.responders.ChunkingResponder.access$000(ChunkingResponder.java:17)
	at fitnesse.responders.ChunkingResponder$RespondingRunnable.run(ChunkingResponder.java:106)
	at java.lang.Thread.run(Thread.java:637)
</pre></span> <span class="error">Could not invoke constructor for put[3]</span></td>
<td>3</td>
<td>arrows in cavern</td>
<td colspan="2">2</td>
</tr>
<tr><td>put</td>
<td>wumpus</td>
<td>in cavern</td>
<td colspan="2">1</td>
</tr>
<tr><td>tell wumpus to go</td>
<td colspan="4">east</td>
</tr>
<tr><td>enter command</td>
<td colspan="4">r</td>
</tr>
<tr><td>check</td>
<td>arrows in cavern</td>
<td>2</td>
<td colspan="2">0</td>
</tr>
<tr><td>check</td>
<td>message</td>
<td>Crunch, crunch, crunch.  The wumpus ate 3 arrows.</td>
<td>was printed</td>
<td>true</td>
</tr>
</table>
<br/><br/>]]></content>
    <relativePageName>WumpusPicksUpManyArrows</relativePageName>
    
        <tables>
            <table>
        <name>import_0</name>
                <row>
                    <col><![CDATA[Import]]></col>
          
        </row>
                <row>
                    <col><![CDATA[HuntTheWumpus.fixtures]]></col>
          
        </row>
        
      </table>
            <table>
        <name>library_1</name>
                <row>
                    <col><![CDATA[Library]]></col>
          
        </row>
                <row>
                    <col><![CDATA[pass(Game driver)]]></col>
          
        </row>
        
      </table>
            <table>
        <name>decisionTable_2</name>
                <row>
                    <col><![CDATA[pass(Make map)]]></col>
          
        </row>
                <row>
                    <col><![CDATA[start]]></col>
                    <col><![CDATA[end]]></col>
                    <col><![CDATA[direction]]></col>
          
        </row>
                <row>
                    <col><![CDATA[1]]></col>
                    <col><![CDATA[2]]></col>
                    <col><![CDATA[E]]></col>
          
        </row>
        
      </table>
            <table>
        <name>decisionTable_3</name>
                <row>
                    <col><![CDATA[<span class="fail">put: Bad table: <br/><pre>fitnesse.slimTables.SlimTable$SyntaxError: Table has 4 header column(s), but row 2 only has 2 column(s).
	at fitnesse.slimTables.DecisionTable$DecisionTableCaller.checkRow(DecisionTable.java:82)
	at fitnesse.slimTables.DecisionTable$FixtureCaller.invokeRow(DecisionTable.java:129)
	at fitnesse.slimTables.DecisionTable$FixtureCaller.invokeRows(DecisionTable.java:125)
	at fitnesse.slimTables.DecisionTable$FixtureCaller.call(DecisionTable.java:119)
	at fitnesse.slimTables.DecisionTable.appendInstructions(DecisionTable.java:29)
	at fitnesse.slimTables.SlimTable.appendInstructions(SlimTable.java:83)
	at fitnesse.responders.run.slimResponder.SlimTestSystem.createInstructions(SlimTestSystem.java:276)
	at fitnesse.responders.run.slimResponder.SlimTestSystem.processTablesAndGetHtml(SlimTestSystem.java:258)
	at fitnesse.responders.run.slimResponder.SlimTestSystem.processAllTablesOnPage(SlimTestSystem.java:245)
	at fitnesse.responders.run.slimResponder.SlimTestSystem.runTestsAndGenerateHtml(SlimTestSystem.java:201)
	at fitnesse.responders.run.MultipleTestsRunner.executeTestSystemPages(MultipleTestsRunner.java:121)
	at fitnesse.responders.run.MultipleTestsRunner.startTestSystemAndExecutePages(MultipleTestsRunner.java:101)
	at fitnesse.responders.run.MultipleTestsRunner.executePagesInTestSystem(MultipleTestsRunner.java:87)
	at fitnesse.responders.run.MultipleTestsRunner.internalExecuteTestPages(MultipleTestsRunner.java:78)
	at fitnesse.responders.run.MultipleTestsRunner.executeTestPages(MultipleTestsRunner.java:57)
	at fitnesse.responders.run.SuiteResponder.performExecution(SuiteResponder.java:47)
	at fitnesse.responders.run.TestResponder.doSending(TestResponder.java:45)
	at fitnesse.responders.ChunkingResponder.startSending(ChunkingResponder.java:67)
	at fitnesse.responders.ChunkingResponder.access$000(ChunkingResponder.java:17)
	at fitnesse.responders.ChunkingResponder$RespondingRunnable.run(ChunkingResponder.java:106)
	at java.lang.Thread.run(Thread.java:637)
</pre></span> <span class="error">Could not invoke constructor for put[3]</span>]]></col>
                    <col><![CDATA[3]]></col>
                    <col><![CDATA[arrows in cavern]]></col>
                    <col><![CDATA[2]]></col>
          
        </row>
                <row>
                    <col><![CDATA[put]]></col>
                    <col><![CDATA[wumpus]]></col>
                    <col><![CDATA[in cavern]]></col>
                    <col><![CDATA[1]]></col>
          
        </row>
                <row>
                    <col><![CDATA[tell wumpus to go]]></col>
                    <col><![CDATA[east]]></col>
          
        </row>
                <row>
                    <col><![CDATA[enter command]]></col>
                    <col><![CDATA[r]]></col>
          
        </row>
                <row>
                    <col><![CDATA[check]]></col>
                    <col><![CDATA[arrows in cavern]]></col>
                    <col><![CDATA[2]]></col>
                    <col><![CDATA[0]]></col>
          
        </row>
                <row>
                    <col><![CDATA[check]]></col>
                    <col><![CDATA[message]]></col>
                    <col><![CDATA[Crunch, crunch, crunch.  The wumpus ate 3 arrows.]]></col>
                    <col><![CDATA[was printed]]></col>
                    <col><![CDATA[true]]></col>
          
        </row>
        
      </table>
      
    </tables>
    
    
    <instructions>
            <instructionResult>
        <instruction><![CDATA[[import_0_0, import, HuntTheWumpus.fixtures]]]></instruction>
        <slimResult><![CDATA[OK]]></slimResult>
        
      </instructionResult>
            <instructionResult>
        <instruction><![CDATA[[library_1_0, make, library1, GameDriver]]]></instruction>
        <slimResult><![CDATA[OK]]></slimResult>
                <expectation>
          <status>right</status>
          <instructionId>library_1_0</instructionId>
          <col>0</col>
          <row>1</row>
          <type>ConstructionExpectation</type>
                    <actual><![CDATA[OK]]></actual>
                              <expected><![CDATA[Game driver]]></expected>
                              <evaluationMessage><![CDATA[pass(Game driver)]]></evaluationMessage>
                  </expectation>
        
      </instructionResult>
            <instructionResult>
        <instruction><![CDATA[[decisionTable_2_0, make, decisionTable_2, MakeMap]]]></instruction>
        <slimResult><![CDATA[OK]]></slimResult>
                <expectation>
          <status>right</status>
          <instructionId>decisionTable_2_0</instructionId>
          <col>0</col>
          <row>0</row>
          <type>ConstructionExpectation</type>
                    <actual><![CDATA[OK]]></actual>
                              <expected><![CDATA[Make map]]></expected>
                              <evaluationMessage><![CDATA[pass(Make map)]]></evaluationMessage>
                  </expectation>
        
      </instructionResult>
            <instructionResult>
        <instruction><![CDATA[[decisionTable_2_1, call, decisionTable_2, table, [[start, end, direction], [1, 2, E]]]]]></instruction>
        <slimResult><![CDATA[__EXCEPTION__:fitnesse.slim.SlimError: message:<<NO_METHOD_IN_CLASS table[1] HuntTheWumpus.fixtures.MakeMap.>>
	at fitnesse.slim.MethodExecutionResult$NoMethod.returnValue(MethodExecutionResult.java:25)
	at fitnesse.slim.MethodExecutionResults.returnValue(MethodExecutionResults.java:16)
	at fitnesse.slim.StatementExecutor.call(StatementExecutor.java:162)
	at fitnesse.slim.Statement.callMethodAtIndex(Statement.java:99)
	at fitnesse.slim.Statement.call(Statement.java:92)
	at fitnesse.slim.Statement.execute(Statement.java:72)
	at fitnesse.slim.ListExecutor.execute(ListExecutor.java:36)
	at fitnesse.slim.SlimServer.executeInstructions(SlimServer.java:93)
	at fitnesse.slim.SlimServer.processTheInstructions(SlimServer.java:78)
	at fitnesse.slim.SlimServer.processOneSetOfInstructions(SlimServer.java:69)
	at fitnesse.slim.SlimServer.tryProcessInstructions(SlimServer.java:55)
	at fitnesse.slim.SlimServer.serve(SlimServer.java:30)
	at fitnesse.socketservice.SocketService$ServerRunner.run(SocketService.java:95)
	at java.lang.Thread.run(Thread.java:637)
]]></slimResult>
        
      </instructionResult>
            <instructionResult>
        <instruction><![CDATA[[decisionTable_2_2, call, decisionTable_2, reset]]]></instruction>
        <slimResult><![CDATA[__EXCEPTION__:fitnesse.slim.SlimError: message:<<NO_METHOD_IN_CLASS reset[0] HuntTheWumpus.fixtures.MakeMap.>>
	at fitnesse.slim.MethodExecutionResult$NoMethod.returnValue(MethodExecutionResult.java:25)
	at fitnesse.slim.MethodExecutionResults.returnValue(MethodExecutionResults.java:16)
	at fitnesse.slim.StatementExecutor.call(StatementExecutor.java:162)
	at fitnesse.slim.Statement.callMethodAtIndex(Statement.java:99)
	at fitnesse.slim.Statement.call(Statement.java:92)
	at fitnesse.slim.Statement.execute(Statement.java:72)
	at fitnesse.slim.ListExecutor.execute(ListExecutor.java:36)
	at fitnesse.slim.SlimServer.executeInstructions(SlimServer.java:93)
	at fitnesse.slim.SlimServer.processTheInstructions(SlimServer.java:78)
	at fitnesse.slim.SlimServer.processOneSetOfInstructions(SlimServer.java:69)
	at fitnesse.slim.SlimServer.tryProcessInstructions(SlimServer.java:55)
	at fitnesse.slim.SlimServer.serve(SlimServer.java:30)
	at fitnesse.socketservice.SocketService$ServerRunner.run(SocketService.java:95)
	at java.lang.Thread.run(Thread.java:637)
]]></slimResult>
        
      </instructionResult>
            <instructionResult>
        <instruction><![CDATA[[decisionTable_2_3, call, decisionTable_2, setStart, 1]]]></instruction>
        <slimResult><![CDATA[/__VOID__/]]></slimResult>
                <expectation>
          <status>ignored</status>
          <instructionId>decisionTable_2_3</instructionId>
          <col>0</col>
          <row>2</row>
          <type>VoidReturnExpectation</type>
                    <actual><![CDATA[/__VOID__/]]></actual>
                              <expected><![CDATA[1]]></expected>
                              <evaluationMessage><![CDATA[1]]></evaluationMessage>
                  </expectation>
        
      </instructionResult>
            <instructionResult>
        <instruction><![CDATA[[decisionTable_2_4, call, decisionTable_2, setEnd, 2]]]></instruction>
        <slimResult><![CDATA[/__VOID__/]]></slimResult>
                <expectation>
          <status>ignored</status>
          <instructionId>decisionTable_2_4</instructionId>
          <col>1</col>
          <row>2</row>
          <type>VoidReturnExpectation</type>
                    <actual><![CDATA[/__VOID__/]]></actual>
                              <expected><![CDATA[2]]></expected>
                              <evaluationMessage><![CDATA[2]]></evaluationMessage>
                  </expectation>
        
      </instructionResult>
            <instructionResult>
        <instruction><![CDATA[[decisionTable_2_5, call, decisionTable_2, setDirection, E]]]></instruction>
        <slimResult><![CDATA[/__VOID__/]]></slimResult>
                <expectation>
          <status>ignored</status>
          <instructionId>decisionTable_2_5</instructionId>
          <col>2</col>
          <row>2</row>
          <type>VoidReturnExpectation</type>
                    <actual><![CDATA[/__VOID__/]]></actual>
                              <expected><![CDATA[E]]></expected>
                              <evaluationMessage><![CDATA[E]]></evaluationMessage>
                  </expectation>
        
      </instructionResult>
            <instructionResult>
        <instruction><![CDATA[[decisionTable_2_6, call, decisionTable_2, execute]]]></instruction>
        <slimResult><![CDATA[/__VOID__/]]></slimResult>
        
      </instructionResult>
            <instructionResult>
        <instruction><![CDATA[[decisionTable_3_0, make, decisionTable_3, put, 3, arrows in cavern, 2]]]></instruction>
        <slimResult><![CDATA[!error:Could not invoke constructor for put[3]]]></slimResult>
                <expectation>
          <status>ignored</status>
          <instructionId>decisionTable_3_0</instructionId>
          <col>0</col>
          <row>0</row>
          <type>ConstructionExpectation</type>
                    <actual><![CDATA[!error:Could not invoke constructor for put[3]]]></actual>
                              <expected><![CDATA[<span class="fail">put: Bad table: <br/><pre>fitnesse.slimTables.SlimTable$SyntaxError: Table has 4 header column(s), but row 2 only has 2 column(s).
	at fitnesse.slimTables.DecisionTable$DecisionTableCaller.checkRow(DecisionTable.java:82)
	at fitnesse.slimTables.DecisionTable$FixtureCaller.invokeRow(DecisionTable.java:129)
	at fitnesse.slimTables.DecisionTable$FixtureCaller.invokeRows(DecisionTable.java:125)
	at fitnesse.slimTables.DecisionTable$FixtureCaller.call(DecisionTable.java:119)
	at fitnesse.slimTables.DecisionTable.appendInstructions(DecisionTable.java:29)
	at fitnesse.slimTables.SlimTable.appendInstructions(SlimTable.java:83)
	at fitnesse.responders.run.slimResponder.SlimTestSystem.createInstructions(SlimTestSystem.java:276)
	at fitnesse.responders.run.slimResponder.SlimTestSystem.processTablesAndGetHtml(SlimTestSystem.java:258)
	at fitnesse.responders.run.slimResponder.SlimTestSystem.processAllTablesOnPage(SlimTestSystem.java:245)
	at fitnesse.responders.run.slimResponder.SlimTestSystem.runTestsAndGenerateHtml(SlimTestSystem.java:201)
	at fitnesse.responders.run.MultipleTestsRunner.executeTestSystemPages(MultipleTestsRunner.java:121)
	at fitnesse.responders.run.MultipleTestsRunner.startTestSystemAndExecutePages(MultipleTestsRunner.java:101)
	at fitnesse.responders.run.MultipleTestsRunner.executePagesInTestSystem(MultipleTestsRunner.java:87)
	at fitnesse.responders.run.MultipleTestsRunner.internalExecuteTestPages(MultipleTestsRunner.java:78)
	at fitnesse.responders.run.MultipleTestsRunner.executeTestPages(MultipleTestsRunner.java:57)
	at fitnesse.responders.run.SuiteResponder.performExecution(SuiteResponder.java:47)
	at fitnesse.responders.run.TestResponder.doSending(TestResponder.java:45)
	at fitnesse.responders.ChunkingResponder.startSending(ChunkingResponder.java:67)
	at fitnesse.responders.ChunkingResponder.access$000(ChunkingResponder.java:17)
	at fitnesse.responders.ChunkingResponder$RespondingRunnable.run(ChunkingResponder.java:106)
	at java.lang.Thread.run(Thread.java:637)
</pre></span>]]></expected>
                              <evaluationMessage><![CDATA[<span class="fail">put: Bad table: <br/><pre>fitnesse.slimTables.SlimTable$SyntaxError: Table has 4 header column(s), but row 2 only has 2 column(s).
	at fitnesse.slimTables.DecisionTable$DecisionTableCaller.checkRow(DecisionTable.java:82)
	at fitnesse.slimTables.DecisionTable$FixtureCaller.invokeRow(DecisionTable.java:129)
	at fitnesse.slimTables.DecisionTable$FixtureCaller.invokeRows(DecisionTable.java:125)
	at fitnesse.slimTables.DecisionTable$FixtureCaller.call(DecisionTable.java:119)
	at fitnesse.slimTables.DecisionTable.appendInstructions(DecisionTable.java:29)
	at fitnesse.slimTables.SlimTable.appendInstructions(SlimTable.java:83)
	at fitnesse.responders.run.slimResponder.SlimTestSystem.createInstructions(SlimTestSystem.java:276)
	at fitnesse.responders.run.slimResponder.SlimTestSystem.processTablesAndGetHtml(SlimTestSystem.java:258)
	at fitnesse.responders.run.slimResponder.SlimTestSystem.processAllTablesOnPage(SlimTestSystem.java:245)
	at fitnesse.responders.run.slimResponder.SlimTestSystem.runTestsAndGenerateHtml(SlimTestSystem.java:201)
	at fitnesse.responders.run.MultipleTestsRunner.executeTestSystemPages(MultipleTestsRunner.java:121)
	at fitnesse.responders.run.MultipleTestsRunner.startTestSystemAndExecutePages(MultipleTestsRunner.java:101)
	at fitnesse.responders.run.MultipleTestsRunner.executePagesInTestSystem(MultipleTestsRunner.java:87)
	at fitnesse.responders.run.MultipleTestsRunner.internalExecuteTestPages(MultipleTestsRunner.java:78)
	at fitnesse.responders.run.MultipleTestsRunner.executeTestPages(MultipleTestsRunner.java:57)
	at fitnesse.responders.run.SuiteResponder.performExecution(SuiteResponder.java:47)
	at fitnesse.responders.run.TestResponder.doSending(TestResponder.java:45)
	at fitnesse.responders.ChunkingResponder.startSending(ChunkingResponder.java:67)
	at fitnesse.responders.ChunkingResponder.access$000(ChunkingResponder.java:17)
	at fitnesse.responders.ChunkingResponder$RespondingRunnable.run(ChunkingResponder.java:106)
	at java.lang.Thread.run(Thread.java:637)
</pre></span> <span class="error">Could not invoke constructor for put[3]</span>]]></evaluationMessage>
                  </expectation>
        
      </instructionResult>
            <instructionResult>
        <instruction><![CDATA[[decisionTable_3_1, call, decisionTable_3, table, [[put, wumpus, in cavern, 1], [tell wumpus to go, east], [enter command, r], [check, arrows in cavern, 2, 0], [check, message, Crunch, crunch, crunch.  The wumpus ate 3 arrows., was printed, true]]]]]></instruction>
        <slimResult><![CDATA[__EXCEPTION__:fitnesse.slim.SlimError: message:<<NO_METHOD_IN_CLASS table[1] HuntTheWumpus.fixtures.CheckRandomWumpusMovement.>>
	at fitnesse.slim.MethodExecutionResult$NoMethod.returnValue(MethodExecutionResult.java:25)
	at fitnesse.slim.MethodExecutionResults.returnValue(MethodExecutionResults.java:16)
	at fitnesse.slim.StatementExecutor.call(StatementExecutor.java:162)
	at fitnesse.slim.Statement.callMethodAtIndex(Statement.java:99)
	at fitnesse.slim.Statement.call(Statement.java:92)
	at fitnesse.slim.Statement.execute(Statement.java:72)
	at fitnesse.slim.ListExecutor.execute(ListExecutor.java:36)
	at fitnesse.slim.SlimServer.executeInstructions(SlimServer.java:93)
	at fitnesse.slim.SlimServer.processTheInstructions(SlimServer.java:78)
	at fitnesse.slim.SlimServer.processOneSetOfInstructions(SlimServer.java:69)
	at fitnesse.slim.SlimServer.tryProcessInstructions(SlimServer.java:55)
	at fitnesse.slim.SlimServer.serve(SlimServer.java:30)
	at fitnesse.socketservice.SocketService$ServerRunner.run(SocketService.java:95)
	at java.lang.Thread.run(Thread.java:637)
]]></slimResult>
                <expectation>
          <status>ignored</status>
          <instructionId>decisionTable_3_1</instructionId>
          <col>1</col>
          <row>0</row>
          <type>VoidReturnExpectation</type>
                    <actual><![CDATA[__EXCEPTION__:fitnesse.slim.SlimError: message:<<NO_METHOD_IN_CLASS table[1] HuntTheWumpus.fixtures.CheckRandomWumpusMovement.>>
	at fitnesse.slim.MethodExecutionResult$NoMethod.returnValue(MethodExecutionResult.java:25)
	at fitnesse.slim.MethodExecutionResults.returnValue(MethodExecutionResults.java:16)
	at fitnesse.slim.StatementExecutor.call(StatementExecutor.java:162)
	at fitnesse.slim.Statement.callMethodAtIndex(Statement.java:99)
	at fitnesse.slim.Statement.call(Statement.java:92)
	at fitnesse.slim.Statement.execute(Statement.java:72)
	at fitnesse.slim.ListExecutor.execute(ListExecutor.java:36)
	at fitnesse.slim.SlimServer.executeInstructions(SlimServer.java:93)
	at fitnesse.slim.SlimServer.processTheInstructions(SlimServer.java:78)
	at fitnesse.slim.SlimServer.processOneSetOfInstructions(SlimServer.java:69)
	at fitnesse.slim.SlimServer.tryProcessInstructions(SlimServer.java:55)
	at fitnesse.slim.SlimServer.serve(SlimServer.java:30)
	at fitnesse.socketservice.SocketService$ServerRunner.run(SocketService.java:95)
	at java.lang.Thread.run(Thread.java:637)
]]></actual>
                              <expected><![CDATA[3]]></expected>
                              <evaluationMessage><![CDATA[3]]></evaluationMessage>
                  </expectation>
                <expectation>
          <status>ignored</status>
          <instructionId>decisionTable_3_1</instructionId>
          <col>2</col>
          <row>0</row>
          <type>VoidReturnExpectation</type>
                    <actual><![CDATA[__EXCEPTION__:fitnesse.slim.SlimError: message:<<NO_METHOD_IN_CLASS table[1] HuntTheWumpus.fixtures.CheckRandomWumpusMovement.>>
	at fitnesse.slim.MethodExecutionResult$NoMethod.returnValue(MethodExecutionResult.java:25)
	at fitnesse.slim.MethodExecutionResults.returnValue(MethodExecutionResults.java:16)
	at fitnesse.slim.StatementExecutor.call(StatementExecutor.java:162)
	at fitnesse.slim.Statement.callMethodAtIndex(Statement.java:99)
	at fitnesse.slim.Statement.call(Statement.java:92)
	at fitnesse.slim.Statement.execute(Statement.java:72)
	at fitnesse.slim.ListExecutor.execute(ListExecutor.java:36)
	at fitnesse.slim.SlimServer.executeInstructions(SlimServer.java:93)
	at fitnesse.slim.SlimServer.processTheInstructions(SlimServer.java:78)
	at fitnesse.slim.SlimServer.processOneSetOfInstructions(SlimServer.java:69)
	at fitnesse.slim.SlimServer.tryProcessInstructions(SlimServer.java:55)
	at fitnesse.slim.SlimServer.serve(SlimServer.java:30)
	at fitnesse.socketservice.SocketService$ServerRunner.run(SocketService.java:95)
	at java.lang.Thread.run(Thread.java:637)
]]></actual>
                              <expected><![CDATA[arrows in cavern]]></expected>
                              <evaluationMessage><![CDATA[arrows in cavern]]></evaluationMessage>
                  </expectation>
                <expectation>
          <status>ignored</status>
          <instructionId>decisionTable_3_1</instructionId>
          <col>3</col>
          <row>0</row>
          <type>VoidReturnExpectation</type>
                    <actual><![CDATA[__EXCEPTION__:fitnesse.slim.SlimError: message:<<NO_METHOD_IN_CLASS table[1] HuntTheWumpus.fixtures.CheckRandomWumpusMovement.>>
	at fitnesse.slim.MethodExecutionResult$NoMethod.returnValue(MethodExecutionResult.java:25)
	at fitnesse.slim.MethodExecutionResults.returnValue(MethodExecutionResults.java:16)
	at fitnesse.slim.StatementExecutor.call(StatementExecutor.java:162)
	at fitnesse.slim.Statement.callMethodAtIndex(Statement.java:99)
	at fitnesse.slim.Statement.call(Statement.java:92)
	at fitnesse.slim.Statement.execute(Statement.java:72)
	at fitnesse.slim.ListExecutor.execute(ListExecutor.java:36)
	at fitnesse.slim.SlimServer.executeInstructions(SlimServer.java:93)
	at fitnesse.slim.SlimServer.processTheInstructions(SlimServer.java:78)
	at fitnesse.slim.SlimServer.processOneSetOfInstructions(SlimServer.java:69)
	at fitnesse.slim.SlimServer.tryProcessInstructions(SlimServer.java:55)
	at fitnesse.slim.SlimServer.serve(SlimServer.java:30)
	at fitnesse.socketservice.SocketService$ServerRunner.run(SocketService.java:95)
	at java.lang.Thread.run(Thread.java:637)
]]></actual>
                              <expected><![CDATA[2]]></expected>
                              <evaluationMessage><![CDATA[2]]></evaluationMessage>
                  </expectation>
        
      </instructionResult>
      
    </instructions>
    
  </result>
  
  
  <finalCounts>
    <right>0</right>
    <wrong>0</wrong>
    <ignores>0</ignores>
    <exceptions>0</exceptions>
  </finalCounts>
  
</testResults>

