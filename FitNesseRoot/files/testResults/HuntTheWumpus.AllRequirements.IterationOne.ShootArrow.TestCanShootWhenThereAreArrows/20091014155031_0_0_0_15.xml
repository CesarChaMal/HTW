<?xml version="1.0"?>
<testResults>
  <FitNesseVersion>v20091014</FitNesseVersion>
  <rootPath>TestCanShootWhenThereAreArrows</rootPath>
    <result>
    <counts>
      <right>0</right>
      <wrong>0</wrong>
      <ignores>0</ignores>
      <exceptions>15</exceptions>
    </counts>
    <content><![CDATA[<br/><div class="setup">
	<div style="float: right;" class="meta"><a href="javascript:expandAll();">Expand All</a> | <a href="javascript:collapseAll();">Collapse All</a></div>
	<a href="javascript:toggleCollapsable('8333407609055197131');">
		<img src="/files/images/collapsableClosed.gif" class="left" id="img8333407609055197131"/>
	</a>
&nbsp;<span class="meta">Set Up: <a href="HuntTheWumpus.SetUp">.HuntTheWumpus.SetUp</a> <a href="HuntTheWumpus.SetUp?edit&amp;redirectToReferer=true&amp;redirectAction=">(edit)</a></span>
	<div class="hidden" id="8333407609055197131"><table border="1" cellspacing="0">
<tr><td colspan="2">fitlibrary.DoFixture</td>
</tr>
<tr><td>start</td>
<td>HuntTheWumpus.fixtures.GameDriver</td>
</tr>
</table>
<br/><table border="1" cellspacing="0">
<tr><td>Import</td>
</tr>
<tr><td>fit</td>
</tr>
<tr><td>HuntTheWumpus.fixtures</td>
</tr>
</table>
</div>
</div>
If there are arrows in the quiver, we ought to be able to shoot.<br/>The arrow should go as far as possible, and then hit a wall.<br/>The arrow should be left in that cavern where it stopped.<br/>The quiver should have one less arrow.<br/><br/><div class="included">
	<div style="float: right;" class="meta"><a href="javascript:expandAll();">Expand All</a> | <a href="javascript:collapseAll();">Collapse All</a></div>
	<a href="javascript:toggleCollapsable('-3266172063724999402');">
		<img src="/files/images/collapsableOpen.gif" class="left" id="img-3266172063724999402"/>
	</a>
&nbsp;<span class="meta">Included page: <a href="HuntTheWumpus.AllRequirements.IterationOne.ShootArrow.CrossMap">CrossMap</a> <a href="HuntTheWumpus.AllRequirements.IterationOne.ShootArrow.CrossMap?edit&amp;redirectToReferer=true&amp;redirectAction=">(edit)</a></span>
	<div class="collapsable" id="-3266172063724999402">Create a convenient map that looks like this:<br/><pre><br/>         [6]<br/>         [7]<br/>   [1][2][3][4][5]<br/>         [8]<br/>         [9]<br/></pre><br/><br/><table border="1" cellspacing="0">
<tr><td colspan="3">Make Map</td>
</tr>
<tr><td>start</td>
<td>end</td>
<td>direction</td>
</tr>
<tr><td>1</td>
<td>2</td>
<td>E</td>
</tr>
<tr><td>2</td>
<td>3</td>
<td>E</td>
</tr>
<tr><td>3</td>
<td>4</td>
<td>E</td>
</tr>
<tr><td>4</td>
<td>5</td>
<td>E</td>
</tr>
<tr><td>6</td>
<td>7</td>
<td>S</td>
</tr>
<tr><td>7</td>
<td>3</td>
<td>S</td>
</tr>
<tr><td>3</td>
<td>8</td>
<td>S</td>
</tr>
<tr><td>8</td>
<td>9</td>
<td>S</td>
</tr>
</table>
</div>
</div>
<br/><table border="1" cellspacing="0">
<tr><td class="error">set quiver to<hr/> <span class="fit_label">Missing methods: public TypeOfResult setQuiverTo(Type1 arg1) { } in class fitlibrary.traverse.workflow.DoTraverse</span></td>
<td colspan="4">5</td>
</tr>
<tr><td class="error">put player in cavern<hr/> <span class="fit_label">Missing methods: public TypeOfResult putPlayerInCavern(Type1 arg1) { } in class fitlibrary.traverse.workflow.DoTraverse</span></td>
<td colspan="4">3</td>
</tr>
<tr><td class="error">enter command<hr/> <span class="fit_label">Missing methods: public TypeOfResult enterCommand(Type1 arg1) { } in class fitlibrary.traverse.workflow.DoTraverse</span></td>
<td colspan="4">shoot east</td>
</tr>
<tr><td class="error">check<hr/> <span class="fit_label">Missing method: public TypeOfResult messageWasPrinted(Type1 arg1) { } in class fitlibrary.traverse.workflow.DoTraverse</span></td>
<td>message</td>
<td>The arrow flies away in silence.</td>
<td>was printed</td>
<td>true</td>
</tr>
<tr><td class="error">check<hr/> <span class="fit_label">Missing method: public TypeOfResult getArrowsInQuiver() { } OR: public TypeOfResult arrowsInQuiver() { } in class fitlibrary.traverse.workflow.DoTraverse</span></td>
<td>arrows in quiver</td>
<td colspan="3">4</td>
</tr>
<tr><td class="error">check<hr/> <span class="fit_label">Missing method: public TypeOfResult arrowsInCavern(Type1 arg1) { } in class fitlibrary.traverse.workflow.DoTraverse</span></td>
<td>arrows in cavern</td>
<td>5</td>
<td colspan="2">1</td>
</tr>
</table>
<br/><table border="1" cellspacing="0">
<tr><td class="error">enter command<hr/> <span class="fit_label">Missing methods: public TypeOfResult enterCommand(Type1 arg1) { } in class fitlibrary.traverse.workflow.DoTraverse</span></td>
<td colspan="3">shoot south</td>
</tr>
<tr><td class="error">check<hr/> <span class="fit_label">Missing method: public TypeOfResult getArrowsInQuiver() { } OR: public TypeOfResult arrowsInQuiver() { } in class fitlibrary.traverse.workflow.DoTraverse</span></td>
<td>arrows in quiver</td>
<td colspan="2">3</td>
</tr>
<tr><td class="error">check<hr/> <span class="fit_label">Missing method: public TypeOfResult arrowsInCavern(Type1 arg1) { } in class fitlibrary.traverse.workflow.DoTraverse</span></td>
<td>arrows in cavern</td>
<td>9</td>
<td>1</td>
</tr>
</table>
<br/><table border="1" cellspacing="0">
<tr><td class="error">enter command<hr/> <span class="fit_label">Missing methods: public TypeOfResult enterCommand(Type1 arg1) { } in class fitlibrary.traverse.workflow.DoTraverse</span></td>
<td colspan="3">shoot west</td>
</tr>
<tr><td class="error">check<hr/> <span class="fit_label">Missing method: public TypeOfResult getArrowsInQuiver() { } OR: public TypeOfResult arrowsInQuiver() { } in class fitlibrary.traverse.workflow.DoTraverse</span></td>
<td>arrows in quiver</td>
<td colspan="2">2</td>
</tr>
<tr><td class="error">check<hr/> <span class="fit_label">Missing method: public TypeOfResult arrowsInCavern(Type1 arg1) { } in class fitlibrary.traverse.workflow.DoTraverse</span></td>
<td>arrows in cavern</td>
<td>1</td>
<td>1</td>
</tr>
</table>
<br/><table border="1" cellspacing="0">
<tr><td class="error">enter command<hr/> <span class="fit_label">Missing methods: public TypeOfResult enterCommand(Type1 arg1) { } in class fitlibrary.traverse.workflow.DoTraverse</span></td>
<td colspan="3">shoot north</td>
</tr>
<tr><td class="error">check<hr/> <span class="fit_label">Missing method: public TypeOfResult getArrowsInQuiver() { } OR: public TypeOfResult arrowsInQuiver() { } in class fitlibrary.traverse.workflow.DoTraverse</span></td>
<td>arrows in quiver</td>
<td colspan="2">1</td>
</tr>
<tr><td class="error">check<hr/> <span class="fit_label">Missing method: public TypeOfResult arrowsInCavern(Type1 arg1) { } in class fitlibrary.traverse.workflow.DoTraverse</span></td>
<td>arrows in cavern</td>
<td>6</td>
<td>1</td>
</tr>
</table>
<br/><br/>]]></content>
    <relativePageName>TestCanShootWhenThereAreArrows</relativePageName>
    
    
    
  </result>
  
  
  <finalCounts>
    <right>0</right>
    <wrong>0</wrong>
    <ignores>0</ignores>
    <exceptions>0</exceptions>
  </finalCounts>
  
</testResults>

